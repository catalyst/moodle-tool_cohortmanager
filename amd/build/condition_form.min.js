define("tool_cohortmanager/condition_form",["exports","core/ajax","core/templates","core/fragment","core/modal_events","core/modal_factory","core/notification","core/str"],(function(_exports,_ajax,_templates,_fragment,_modal_events,_modal_factory,_notification,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_templates=_interopRequireDefault(_templates),_fragment=_interopRequireDefault(_fragment),_modal_events=_interopRequireDefault(_modal_events),_modal_factory=_interopRequireDefault(_modal_factory),_notification=_interopRequireDefault(_notification);var SELECTORS_ADD_CONDITION_BUTTON="#id_conditionmodalbutton",SELECTORS_SELECT_CONDITION="#id_condition",SELECTORS_CONDITIONS_LIST="#conditions",SELECTORS_RULE_FORM_CONDITIONS_JSON="#id_conditionjson",SELECTORS_RULE_FORM_IS_CONDITIONS_CHANGED="#id_isconditionschanged",SELECTORS_CONDITIONS_NOT_SAVED_WARNING="#tool-cohortmanager-not-saved",SELECTORS_CONDITION_EDIT_ACTION="tool-cohortmanager-condition-edit",SELECTORS_CONDITION_DELETE_ACTION="tool-cohortmanager-condition-delete",SELECTORS_CONDITIONS="tool-cohortmanager-conditions";_exports.init=function(){var addButton=document.querySelector(SELECTORS_ADD_CONDITION_BUTTON),conditionSelect=document.querySelector(SELECTORS_SELECT_CONDITION);addButton.addEventListener("click",(function(e){e.preventDefault();var className=conditionSelect.value;""!==className&&displayModalForm(className,"")})),applyConditionActions()};var getModalFormBody=function(className,submittedData,defaults){void 0===defaults&&(defaults="");var params={classname:className,jsonformdata:JSON.stringify(submittedData),defaults:JSON.stringify(defaults)};return _fragment.default.loadFragment("tool_cohortmanager","condition_form",1,params)},displayModalForm=function(className,defaults){void 0===defaults&&(defaults=""),_modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,title:(0,_str.get_string)("conditionformtitle","tool_cohortmanager"),body:getModalFormBody(className,"",defaults),large:!0}).then((function(modal){modal.getRoot().on(_modal_events.default.save,(function(e){e.preventDefault(),modal.getRoot().find("form").submit()})),modal.getRoot().on(_modal_events.default.hidden,(function(){modal.destroy()})),modal.getRoot().on("submit","form",(function(e){e.preventDefault(),submitModalFormAjax(className,modal)})),modal.show()}))},submitModalFormAjax=function(className,modal){var changeEvent=document.createEvent("HTMLEvents");changeEvent.initEvent("change",!0,!0),modal.getRoot().find(":input").each((function(index,element){element.dispatchEvent(changeEvent)}));var invalid=modal.getRoot().find('[aria-invalid="true"]');if(invalid.length)invalid.first().focus();else{var submittedData=modal.getRoot().find("form").serialize();_ajax.default.call([{methodname:"tool_cohortmanager_submit_condition_form",args:{classname:className,jsonformdata:JSON.stringify(submittedData)},done:function(response){updateCondition(response),renderConditions(getConditions()),modal.destroy()},fail:function(){modal.setBody(getModalFormBody(className,submittedData,""))}}])}},updateCondition=function(data){var condition=_objectSpread({},data),conditions=getConditions();condition.position>=0?conditions[condition.position]=condition:(conditions.push(condition),condition.position=conditions.length-1),saveConditionsToRuleForm(conditions)},getConditions=function(){var conditions=[],conditionsjson=document.querySelector(SELECTORS_RULE_FORM_CONDITIONS_JSON).value;return""!==conditionsjson&&(conditions=JSON.parse(conditionsjson)),conditions},saveConditionsToRuleForm=function(conditions){document.querySelector(SELECTORS_RULE_FORM_CONDITIONS_JSON).setAttribute("value",JSON.stringify(conditions)),document.querySelector(SELECTORS_RULE_FORM_IS_CONDITIONS_CHANGED).setAttribute("value",1)},renderConditions=function(conditions){_templates.default.render("tool_cohortmanager/conditions",{conditions:conditions}).then((function(html){document.querySelector(SELECTORS_CONDITIONS_LIST).innerHTML=html,applyConditionActions(),document.querySelector(SELECTORS_CONDITIONS_NOT_SAVED_WARNING).classList.remove("hidden")})).fail((function(){_notification.default.exception({message:"Error updating conditions"})}))},applyConditionActions=function(){document.getElementsByClassName(SELECTORS_CONDITIONS)[0].addEventListener("click",(function(event){var element="SPAN"==event.target.tagName?event.target:event.target.parentNode;if(element.className==SELECTORS_CONDITION_DELETE_ACTION&&_notification.default.confirm((0,_str.get_string)("confirm","moodle"),(0,_str.get_string)("delete_confirm_condition","tool_cohortmanager"),(0,_str.get_string)("yes","moodle"),(0,_str.get_string)("no","moodle"),(function(){var position=element.dataset.position,conditions=getConditions().filter((function(c){return c.position!=position})).map((function(condition,index){return _objectSpread(_objectSpread({},condition),{},{position:index})}));saveConditionsToRuleForm(conditions),renderConditions(conditions)})),element.className==SELECTORS_CONDITION_EDIT_ACTION){var position=element.dataset.position,condition=getConditions()[position];displayModalForm(condition.classname,condition)}}))}}));

//# sourceMappingURL=condition_form.min.js.map